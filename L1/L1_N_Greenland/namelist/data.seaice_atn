# SEAICE parameters
 &SEAICE_PARM01
#the following is needed to recover old default values
#since PR116 (https://github.com/MITgcm/MITgcm/pull/116)
      SEAICE_waterDrag=0.005344995140913508357982664,
#
# ATN I now have this as true
      SEAICEupdateOceanStress=.TRUE.,
#
# from Martin
      SEAICEuseTILT=.FALSE.,
      SEAICE_multDim=1,
      SEAICErestoreUnderIce=.TRUE.,
      SEAICE_salt0=4.,
#ML: I recommend 1.e-5 (only slightly more expensive)
      LSR_ERROR          = 1.e-5,
      SEAICEuseDYNAMICS  = .TRUE.,
      MIN_ATEMP          = -40.,
      MIN_TICE           = -40.,
      SEAICEadvScheme    = 33,

      SEAICEpresH0=2.,
      SEAICEpresPow0=1,
      SEAICEpresPow1=1,
      SEAICE_strength = 2.25e4,
# IGF Removing this hack
#      SEAICE_area_max = 0.97,
      SEAICE_area_max = 1.0,
      SEAICE_no_slip     = .TRUE.,
      SEAICE_drag=0.001,
      OCEAN_drag=0.001,
#for backward compatibility (before 2011 june 19, those were the defaults)
#     SEAICE_area_floor=0.15,
#     SEAICE_area_reg=0.15,
# for long time step:
#      SEAICE_deltaTevp   = 720.,
# for regular time step:
#      SEAICE_deltaTevp   = 60.,
# BAD OPTION -- DO NOT USE -- SEAICE_maskRHS     = .TRUE.,
#
# IGF THESE ARE ALL DEFAULTS
      SEAICEuseFluxForm = .TRUE.,
      SEAICEadvSnow      = .TRUE.,
      SEAICEuseFlooding  = .TRUE.,
# ATN note advSalt must be off
#      SEAICEadvSalt      = .TRUE.,

# ML says we do not need these diffusion terms
#      SEAICEdiffKhHeff   = 400.,
#      SEAICEdiffKhArea   = 400.,
#      SEAICEdiffKhSnow   = 400.,
#      SEAICEdiffKhSalt   = 400.,
#
      SEAICE_mcPheePiston= 3.858024691358025E-05,
# IGF unused
      SEAICE_frazilFrac  = 1.,

# ATN: needed to close offline heat budget, in combo with
# #undef SEAICE_DISABLE_HEATCONSFIX <-- default is undef. If we do not
# have this entry in SEAICE_OPTIONS.h, then it is the same as undef.
# Note the double-negative: undef disable = define enable a heatconsfix.
# Thus When undef (define enable) plus SEAICEheatConstFix, we compute
# a term in seaice growth associated with difference between ice melt
# point and 0degC, diagnose to SIaaflux, and add it to QNET to pass out
      SEAICEheatConsFix  = .TRUE.,

      SEAICE_mcPheeTaper = 0.,
      SEAICE_areaLossFormula=2,

      SEAICE_tempFrz0    = -1.96,
      SEAICE_dTempFrz_dS = 0.,
      SEAICEuseMetricTerms = .TRUE.,
#
# ML says we do not need this anymore
#      SEAICE_clipVelocities = .TRUE.,
#
# ML: will lead to zero velocities where there is no ice (no need for clipping velocities anymore)
      SEAICEscaleSurfStress=.TRUE.,
#
# ML: not important just more consistent
      SEAICEaddSnowMass=.TRUE.,

# only makes sense with SEAICE_multDim > 1, but then it makes a lot of sense
#     SEAICE_useMultDimSnow = .TRUE.,

# ML: the following are for better stability of the solver
      SEAICE_OLx=2,
      SEAICE_OLy=2,
      SEAICEetaZmethod=3,

#take 33% out of (1-albedo)
      SEAICE_dryIceAlb   = 0.84,
      SEAICE_wetIceAlb   = 0.78,
      SEAICE_drySnowAlb  = 0.90,
      SEAICE_wetSnowAlb  = 0.8 ,
#default albedos
      SEAICE_dryIceAlb_south   = 0.75
      SEAICE_wetIceAlb_south   = 0.66
      SEAICE_drySnowAlb_south  = 0.84
      SEAICE_wetSnowAlb_south  = 0.7 
#initial condition
#      AreaFile   = 'areaInit.llc540',
#      HeffFile   = 'heffInit.llc540',
#      HsnowFile  = 'hsnowInit.llc540',
 &
#
 &SEAICE_PARM02
 &
